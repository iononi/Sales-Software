package sql_connection;

import Img_JTable.ImageRender;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.time.format.DateTimeFormatter;
import java.time.LocalDateTime;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Eduardo Ruiz Rios
 */
public class Entrada extends javax.swing.JFrame {

    /**
     * Creates JInternalForm for each insertion submemu
     */
    private final MealRegister mealR;
    private final WaiterRegister waiterR;
    private final CustomerRegister customerR;
    private final TableRegister tableR;
    private final ChefRegister chefR;
    private final BillRegister billR;
    private final InVoiceRegister invoiceR;
    private final WaiterQuery waiterQ;
    private final TableQuery tableQ;
    private final ChefQuery chefQ;
    private final CustomerQuery customerQ;
    private final BillQuery billQ;
    private final InvoiceQuery invoiceQ;
    private final ticket ticket;
    private final UpdateCategory updte_cat;
    private final UpdateWaiter updte_wat;
    private final UpdateChef updte_chef;
    private DefaultTableModel dtm, tm;
    private BD_Connection controller;
    private Object data[] = new Object[5];

    /**
     * Creates new form Entrada
     */
    public Entrada() {
        initComponents();
        setIconImage(getIconImage());
        search_btn.setIcon(setIcon("/imagenes/busqueda.jpeg"));
        search_btn.setPressedIcon(setPressIcon());
        dtm = (DefaultTableModel) menuTable.getModel();

        menuTable.setDefaultRenderer(Object.class, new ImageRender());
        mealR = new MealRegister();
        waiterR = new WaiterRegister();
        customerR = new CustomerRegister();
        tableR = new TableRegister();
        chefR = new ChefRegister();
        billR = new BillRegister();
        invoiceR = new InVoiceRegister();
        waiterQ = new WaiterQuery();
        tableQ = new TableQuery();
        chefQ = new ChefQuery();
        customerQ = new CustomerQuery();
        billQ = new BillQuery();
        invoiceQ = new InvoiceQuery();
        controller = new BD_Connection();
        ticket = new ticket();
        updte_cat = new UpdateCategory();
        updte_wat = new UpdateWaiter();
        updte_chef = new UpdateChef();

        loadToCB();// loads the categories avaiblable into the JComboBox placed the search area

        tm = (DefaultTableModel) ticket.getTicketTable().getModel();
        ticket.getTicketTable().setDefaultRenderer(Object.class, new ImageRender());

        add(mealR);
        add(waiterR);
        add(customerR);
        add(tableR);
        add(chefR);
        add(billR);
        add(invoiceR);
        add(waiterQ);
        add(tableQ);
        add(chefQ);
        add(customerQ);
        add(billQ);
        add(invoiceQ);

    }

    @Override
    public Image getIconImage() {

        Image img = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagenes/buy.jpg"));

        return img;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The8 content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        menu_btn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        menuTable = new javax.swing.JTable();
        filterCB = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        mealFilter = new javax.swing.JTextField();
        search_btn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tableTxt = new javax.swing.JTextField();
        order_btn = new javax.swing.JButton();
        customerTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        mealTxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        waiterTxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        quantityTxt = new javax.swing.JTextField();
        clean_btn = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        payCheck = new javax.swing.JTextField();
        pay_btn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        changeCheck = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        print_btn = new javax.swing.JButton();
        tableCheck = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        customCheck = new javax.swing.JTextField();
        total = new javax.swing.JLabel();
        totalCheck = new javax.swing.JTextField();
        clean_btn2 = new javax.swing.JButton();
        desk = new javax.swing.JDesktopPane();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        exit_btn = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        insrt_meal = new javax.swing.JMenuItem();
        insrt_wait_btn = new javax.swing.JMenuItem();
        insrt_tab_btn = new javax.swing.JMenuItem();
        insrt_chef_btn = new javax.swing.JMenuItem();
        insrt_custom_btn = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        insrt_bill_btn = new javax.swing.JMenuItem();
        insrt_invdet_btn = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        qry_waiter_op = new javax.swing.JMenuItem();
        qry_table_op = new javax.swing.JMenuItem();
        qry_chef_op = new javax.swing.JMenuItem();
        qry_custom_op = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JPopupMenu.Separator();
        qry_bill_op = new javax.swing.JMenuItem();
        qry_invoice_op = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        about_it_mi = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        modify_menu = new javax.swing.JMenu();
        mdfy_cat = new javax.swing.JMenuItem();
        mdfy_turn = new javax.swing.JMenu();
        mdfy_waiter = new javax.swing.JMenuItem();
        mdfy_chef = new javax.swing.JMenuItem();

        jMenuItem2.setText("jMenuItem2");

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Los Farolitos Veracruz");
        setBackground(new java.awt.Color(102, 102, 102));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(java.awt.Color.gray);
        setResizable(false);

        menu_btn.setText("Menu");
        menu_btn.setToolTipText("Muestra todo el menu");
        menu_btn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        menu_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_btnActionPerformed(evt);
            }
        });

        jScrollPane1.setToolTipText("");

        menuTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Platillo", "Descripcion", "Precio", "Imagen"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        menuTable.setRowHeight(60);
        jScrollPane1.setViewportView(menuTable);
        if (menuTable.getColumnModel().getColumnCount() > 0) {
            menuTable.getColumnModel().getColumn(0).setResizable(false);
            menuTable.getColumnModel().getColumn(0).setPreferredWidth(2);
            menuTable.getColumnModel().getColumn(1).setPreferredWidth(40);
            menuTable.getColumnModel().getColumn(2).setMinWidth(10);
            menuTable.getColumnModel().getColumn(2).setPreferredWidth(150);
            menuTable.getColumnModel().getColumn(3).setResizable(false);
            menuTable.getColumnModel().getColumn(3).setPreferredWidth(2);
            menuTable.getColumnModel().getColumn(4).setResizable(false);
        }

        filterCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos" }));

        jLabel14.setText("Platillo:");

        search_btn.setBackground(new java.awt.Color(187, 187, 187));
        search_btn.setToolTipText("Busqueda filtrada");
        search_btn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        search_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(mealFilter)
                .addGap(18, 18, 18)
                .addComponent(filterCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(search_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(16, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(filterCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(mealFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(search_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("¡Bienvenidos!");

        jLabel13.setIcon(new ImageIcon("C:\\Users\\Eduardo\\Documents\\ALGORITMOS\\Java\\NetBeansProjects\\FPOO\\SQL_Connection\\src\\imagenes\\farolitos.jfif"));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel9.setText("Mesa");

        jLabel6.setText("Cliente");

        tableTxt.setToolTipText("Número de mesa");

        order_btn.setText("Ordenar");
        order_btn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        order_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                order_btnActionPerformed(evt);
            }
        });

        customerTxt.setToolTipText("Nombre del cliente");

        jLabel7.setText("Platillo");

        mealTxt.setToolTipText("ID del platillo");

        jLabel8.setText("Mesero");

        waiterTxt.setToolTipText("ID del mesero");

        jLabel10.setText("Cantidad");

        quantityTxt.setToolTipText("");

        clean_btn.setText("Limpiar");
        clean_btn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clean_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clean_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(customerTxt))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(mealTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(waiterTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tableTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(quantityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(order_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(clean_btn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(customerTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(mealTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(waiterTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(tableTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(quantityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(order_btn)
                    .addComponent(clean_btn))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setText("Paga con:");

        pay_btn.setText("Pagar");
        pay_btn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pay_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pay_btnActionPerformed(evt);
            }
        });

        jLabel4.setText("Su cambio es::");

        changeCheck.setEditable(false);

        print_btn.setText("Imprimir Ticket");
        print_btn.setToolTipText("Imprime la cuenta");
        print_btn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        print_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                print_btnActionPerformed(evt);
            }
        });

        tableCheck.setToolTipText("Número de mesa");

        jLabel11.setText("Mesa");

        jLabel12.setText("Cliente");

        customCheck.setToolTipText("Nombre del cliente");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(print_btn)
                                .addGap(0, 53, Short.MAX_VALUE))
                            .addComponent(tableCheck)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(customCheck)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(customCheck, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(tableCheck, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(print_btn)
                .addGap(46, 46, 46))
        );

        total.setText("Total:");

        totalCheck.setEditable(false);

        clean_btn2.setText("Limpiar");
        clean_btn2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clean_btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clean_btn2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(totalCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(payCheck, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                            .addComponent(changeCheck))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pay_btn)
                            .addComponent(clean_btn2, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalCheck, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pay_btn)
                    .addComponent(payCheck, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(changeCheck, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(clean_btn2))
                .addContainerGap())
        );

        javax.swing.GroupLayout deskLayout = new javax.swing.GroupLayout(desk);
        desk.setLayout(deskLayout);
        deskLayout.setHorizontalGroup(
            deskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 534, Short.MAX_VALUE)
        );
        deskLayout.setVerticalGroup(
            deskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 435, Short.MAX_VALUE)
        );

        jLabel2.setText("<html><center>Los Farolitos Veracruz<p>Av Jardines del Virginia 104, Jardines del Virginia, 94294 Boca del Río, Ver.");
        jLabel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jMenu1.setText("Archivo");
        jMenu1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        exit_btn.setText("Exit");
        exit_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_btnActionPerformed(evt);
            }
        });
        jMenu1.add(exit_btn);

        jMenuBar1.add(jMenu1);

        jMenu5.setText("Registro");
        jMenu5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu5.add(jSeparator4);

        insrt_meal.setText("Registrar Platillo");
        insrt_meal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insrt_mealActionPerformed(evt);
            }
        });
        jMenu5.add(insrt_meal);

        insrt_wait_btn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        insrt_wait_btn.setText("Registrar Mesero");
        insrt_wait_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insrt_wait_btnActionPerformed(evt);
            }
        });
        jMenu5.add(insrt_wait_btn);

        insrt_tab_btn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        insrt_tab_btn.setText("Registrar Mesa");
        insrt_tab_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insrt_tab_btnActionPerformed(evt);
            }
        });
        jMenu5.add(insrt_tab_btn);

        insrt_chef_btn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        insrt_chef_btn.setText("Registrar Chef");
        insrt_chef_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insrt_chef_btnActionPerformed(evt);
            }
        });
        jMenu5.add(insrt_chef_btn);

        insrt_custom_btn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.ALT_DOWN_MASK));
        insrt_custom_btn.setText("Registrar Cliente");
        insrt_custom_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insrt_custom_btnActionPerformed(evt);
            }
        });
        jMenu5.add(insrt_custom_btn);
        jMenu5.add(jSeparator5);

        insrt_bill_btn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        insrt_bill_btn.setText("Registrar Factura");
        insrt_bill_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insrt_bill_btnActionPerformed(evt);
            }
        });
        jMenu5.add(insrt_bill_btn);

        insrt_invdet_btn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        insrt_invdet_btn.setText("Registrar Detalle Factura");
        insrt_invdet_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insrt_invdet_btnActionPerformed(evt);
            }
        });
        jMenu5.add(insrt_invdet_btn);

        jMenuBar1.add(jMenu5);

        jMenu2.setText("Consulta");
        jMenu2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu2.add(jSeparator7);

        qry_waiter_op.setText("Meseros");
        qry_waiter_op.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qry_waiter_opActionPerformed(evt);
            }
        });
        jMenu2.add(qry_waiter_op);

        qry_table_op.setText("Mesas");
        qry_table_op.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qry_table_opActionPerformed(evt);
            }
        });
        jMenu2.add(qry_table_op);

        qry_chef_op.setText("Chef");
        qry_chef_op.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qry_chef_opActionPerformed(evt);
            }
        });
        jMenu2.add(qry_chef_op);

        qry_custom_op.setText("Clientes");
        qry_custom_op.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qry_custom_opActionPerformed(evt);
            }
        });
        jMenu2.add(qry_custom_op);
        jMenu2.add(jSeparator8);

        qry_bill_op.setText("Facturas");
        qry_bill_op.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qry_bill_opActionPerformed(evt);
            }
        });
        jMenu2.add(qry_bill_op);

        qry_invoice_op.setText("Detalle Facturas");
        qry_invoice_op.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qry_invoice_opActionPerformed(evt);
            }
        });
        jMenu2.add(qry_invoice_op);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Ayuda");
        jMenu3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu3.add(jSeparator3);

        about_it_mi.setText("Acerca de");
        about_it_mi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                about_it_miActionPerformed(evt);
            }
        });
        jMenu3.add(about_it_mi);
        jMenu3.add(jSeparator6);

        jMenuBar1.add(jMenu3);

        modify_menu.setText("Modificar");

        mdfy_cat.setText("Actualizar categoria");
        mdfy_cat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mdfy_catActionPerformed(evt);
            }
        });
        modify_menu.add(mdfy_cat);

        mdfy_turn.setText("Actualizar turno");

        mdfy_waiter.setText("Mesero");
        mdfy_waiter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mdfy_waiterActionPerformed(evt);
            }
        });
        mdfy_turn.add(mdfy_waiter);

        mdfy_chef.setText("Cocinero");
        mdfy_chef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mdfy_chefActionPerformed(evt);
            }
        });
        mdfy_turn.add(mdfy_chef);

        modify_menu.add(mdfy_turn);

        jMenuBar1.add(modify_menu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(desk)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(182, 182, 182)
                .addComponent(menu_btn)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(menu_btn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(desk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(99, 99, 99)
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void about_it_miActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_about_it_miActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Eduardo Ruiz Rios\nProyecto Fund de POO\n", "Proyecto FPOO", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_about_it_miActionPerformed

    private void insrt_wait_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insrt_wait_btnActionPerformed
        // TODO add your handling code here:
        desk.add(waiterR);
        waiterR.show();
    }//GEN-LAST:event_insrt_wait_btnActionPerformed

    private void insrt_chef_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insrt_chef_btnActionPerformed
        // TODO add your handling code here:
        desk.add(chefR);
        chefR.show();
    }//GEN-LAST:event_insrt_chef_btnActionPerformed

    private void insrt_tab_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insrt_tab_btnActionPerformed
        // TODO add your handling code here:
        desk.add(tableR);
        tableR.show();
    }//GEN-LAST:event_insrt_tab_btnActionPerformed

    private void insrt_custom_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insrt_custom_btnActionPerformed
        // TODO add your handling code here:
        desk.add(customerR);
        customerR.show();
    }//GEN-LAST:event_insrt_custom_btnActionPerformed

    private void insrt_invdet_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insrt_invdet_btnActionPerformed
        // TODO add your handling code here:
        desk.add(invoiceR);
        invoiceR.show();
    }//GEN-LAST:event_insrt_invdet_btnActionPerformed

    private void insrt_bill_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insrt_bill_btnActionPerformed
        // TODO add your handling code here
        desk.add(billR);
        billR.show();
    }//GEN-LAST:event_insrt_bill_btnActionPerformed

    private void qry_waiter_opActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qry_waiter_opActionPerformed
        // TODO add your handling code here:
        desk.add(waiterQ);
        waiterQ.show();
    }//GEN-LAST:event_qry_waiter_opActionPerformed

    private void qry_chef_opActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qry_chef_opActionPerformed
        // TODO add your handling code here:
        desk.add(chefQ);
        chefQ.show();
    }//GEN-LAST:event_qry_chef_opActionPerformed

    private void qry_table_opActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qry_table_opActionPerformed
        // TODO add your handling code here:
        desk.add(tableQ);
        tableQ.show();
    }//GEN-LAST:event_qry_table_opActionPerformed

    private void qry_custom_opActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qry_custom_opActionPerformed
        // TODO add your handling code here:
        desk.add(customerQ);
        customerQ.show();
    }//GEN-LAST:event_qry_custom_opActionPerformed

    private void qry_bill_opActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qry_bill_opActionPerformed
        // TODO add your handling code here:
        desk.add(billQ);
        billQ.show();
    }//GEN-LAST:event_qry_bill_opActionPerformed

    private void qry_invoice_opActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qry_invoice_opActionPerformed
        // TODO add your handling code here:
        desk.add(invoiceQ);
        invoiceQ.show();
    }//GEN-LAST:event_qry_invoice_opActionPerformed

    private void insrt_mealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insrt_mealActionPerformed
        // TODO add your handling code here:
        desk.add(mealR);
        mealR.show();
    }//GEN-LAST:event_insrt_mealActionPerformed

    private void menu_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_btnActionPerformed
        // TODO add your handling code here:

        int row_count = menuTable.getRowCount();

        if (row_count > 0) {
            dtm.setRowCount(0);
        }

        try {
            controller.setConnection();
            controller.createStmt();

            if (controller.runQuery(String.format("SELECT * FROM platillos"))) {
                if (controller.getRS().next()) {
                    insertMenu();
                }
            }

            controller.closeRS();
        } catch (SQLException ex) {
            Logger.getLogger(BD_Connection.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "ERROR: no se pudo ejecutar la consulta.", "Error de Conexion", JOptionPane.ERROR_MESSAGE);
        } finally {
            controller.closeStmt();
            controller.disconnect();
        }

    }//GEN-LAST:event_menu_btnActionPerformed

    private void exit_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_btnActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        dispose();
    }//GEN-LAST:event_exit_btnActionPerformed

    private void order_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_order_btnActionPerformed
        // TODO add your handling code here:
        int response = JOptionPane.showConfirmDialog(null, "Esta seguro que los datos de la orden son correctos?", "Confirmar operacion", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (response == JOptionPane.YES_OPTION) {
            //Si los textField de la seccion ordenar estan vacios entonces no se puede ejecutar la operacion
            if (customerTxt.getText().equals("") || mealTxt.getText().equals("") || waiterTxt.getText().equals("") || tableTxt.getText().equals("") || quantityTxt.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Faltan campos por llenar", "Campos incompletos", JOptionPane.INFORMATION_MESSAGE);
            } else {
                try {
                    controller.setConnection();
                    controller.createStmt();

                    if (controller.runQuery("SELECT ID_Cliente FROM clientes WHERE Nombre_Cliente = '" + customerTxt.getText() + "'")) {
                        controller.getRS().next();
                        int customer_id = controller.getInt(1);
                        controller.getStmt().execute(String.format("INSERT INTO factura(R_Cliente, R_Mesero, R_Mesa, Fecha_Factura) VALUES (%d, '%s', %d, CURDATE())", customer_id,
                                waiterTxt.getText(), Integer.parseInt(tableTxt.getText())));

                        if (controller.runQuery("SELECT factura.ID_Factura FROM factura INNER JOIN clientes ON factura.R_Cliente = clientes.ID_Cliente WHERE clientes.Nombre_Cliente = '" + customerTxt.getText() + "' AND factura.Fecha_Factura = CURDATE()")) {
                            controller.getRS().next();
                            int factura_id = controller.getInt(1);
                            controller.getStmt().execute(String.format("INSERT INTO detallefactura(R_Factura, R_Platillo, Cantidad) VALUES (%d, %d, %d)", factura_id, Integer.parseInt(mealTxt.getText()), Integer.parseInt(quantityTxt.getText())));
                        } else {
                            JOptionPane.showMessageDialog(null, "Hubo un error al procesar la orden", "Error", JOptionPane.ERROR_MESSAGE);
                        }

                    } else {
                        JOptionPane.showMessageDialog(null, "No existe registro del cliente " + customerTxt.getText(), "Error", JOptionPane.ERROR_MESSAGE);
                    }
                    controller.closeRS();

                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Hubo un error al procesar la orden", "", JOptionPane.ERROR_MESSAGE);
                } finally {
                    JOptionPane.showMessageDialog(null, "Estamos preparando su orden", "Orden en preparacion", JOptionPane.INFORMATION_MESSAGE);
                    controller.closeStmt();
                    controller.disconnect();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "La orden ha sido cancelada", "Operacion cancelada", JOptionPane.INFORMATION_MESSAGE);
        }


    }//GEN-LAST:event_order_btnActionPerformed

    private void print_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_print_btnActionPerformed
        // TODO add your handling code here:

        double importe = 0.0;

        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");

        if (customCheck.getText().equals("") || tableCheck.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Faltan campos por llenar", "Campos incompletos", JOptionPane.INFORMATION_MESSAGE);
        } else {

            if (tm.getRowCount() > 0) {
                tm.setRowCount(0);
            }

            desk.add(ticket);
            ticket.show();
            try {
                controller.setConnection();
                controller.createStmt();

                if (controller.runQuery(String.format("SELECT detallefactura.Cantidad, platillos.Platillo, platillos.Precio FROM factura INNER JOIN detallefactura ON factura.ID_Factura = detallefactura.R_Factura"
                        + " INNER JOIN platillos ON detallefactura.R_Platillo = platillos.ID_Platillo INNER JOIN clientes ON factura.R_Cliente = clientes.ID_Cliente WHERE clientes.Nombre_Cliente = '%s'"
                        + " AND factura.R_Mesa = %d AND CAST(factura.Fecha_Factura AS date) = CAST(CURDATE() AS date)", customCheck.getText().trim(), Integer.parseInt(tableCheck.getText())))) {
                    if (controller.getRS().next()) {
                        do {
                            data[0] = controller.getInt(1); //para la cantidad
                            data[1] = controller.getString(2); //para el nombre del platillo
                            data[2] = controller.getFloat(3); //para el precio del prodcuto
                            data[3] = controller.getInt(1) * controller.getFloat(3); // para el importe, cantidad * precio
                            importe += (double) data[3];
                            tm.addRow(data);
                        } while (controller.getRS().next());
                    }

                    if (controller.runQuery(String.format("SELECT meseros.Nombre_Mesero FROM meseros INNER JOIN factura ON meseros.ID_Mesero = factura.R_Mesero"
                            + " INNER JOIN clientes ON factura.R_Cliente = clientes.ID_Cliente WHERE clientes.Nombre_Cliente = '%s' AND factura.R_Mesa = %d", customCheck.getText().trim(), Integer.parseInt(tableCheck.getText())))) {
                        controller.getRS().next();
                        ticket.getWaiterLabel().setText(String.format("%s", controller.getString(1)));
                    }
                    ticket.getDateLabel().setText(dtf.format(LocalDateTime.now()));
                } else {
                    JOptionPane.showMessageDialog(null, "ERROR: no se pudo recuperar la información de la factura", "Error de consulta", JOptionPane.ERROR_MESSAGE);
                }
                controller.closeRS();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "ERROR: no se pudo recuperar la informacion de la factura", "Error de consulta", JOptionPane.ERROR_MESSAGE);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Ingrese un número de mesa válido y vuelva a intentarlo", "Dato inválido", JOptionPane.ERROR_MESSAGE);
            } finally {
                controller.closeStmt();
                controller.disconnect();
                totalCheck.setText(String.format("%.2f", importe));
            }

        }
    }//GEN-LAST:event_print_btnActionPerformed

    private void pay_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pay_btnActionPerformed
        // TODO add your handling code here:
        try {
            if (Float.parseFloat(payCheck.getText()) < Float.parseFloat(totalCheck.getText())) {
                JOptionPane.showMessageDialog(null, "El monto ingresado es menor que el total a pagar", "", JOptionPane.INFORMATION_MESSAGE);
            } else {
                String cambio = String.format("%.2f", Float.parseFloat(payCheck.getText()) - Float.parseFloat(totalCheck.getText()));
                changeCheck.setText(cambio);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Ingrese un monto válido y vuelva a intentar", "Monto inválido", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_pay_btnActionPerformed

    private void clean_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clean_btnActionPerformed
        // TODO add your handling code here:
        customerTxt.setText("");
        mealTxt.setText("");
        waiterTxt.setText("");
        tableTxt.setText("");
        quantityTxt.setText("");
    }//GEN-LAST:event_clean_btnActionPerformed

    private void clean_btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clean_btn2ActionPerformed
        // TODO add your handling code here:
        customCheck.setText("");
        tableCheck.setText("");
        totalCheck.setText("");
        payCheck.setText("");
        changeCheck.setText("");
    }//GEN-LAST:event_clean_btn2ActionPerformed

    private void search_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_btnActionPerformed
        // TODO add your handling code here:

        //evita que se encima una consulta con otra
        if (dtm.getRowCount() > 0) {
            dtm.setRowCount(0);
        }

        try {
            controller.setConnection();
            controller.createStmt();

            switch (filterCB.getSelectedItem().toString()) {
                case "Todos":
                    if (mealFilter.getText().equals("")) {
                        //Mostrar todos los platillos
                        if (controller.runQuery("SELECT platillos.ID_Platillo, platillos.Platillo, platillos.Descripcion, platillos.Precio, platillos.Imagen FROM platillos")) {
                            if (controller.getRS().next()) {
                                insertMenu();
                            } else {
                                JOptionPane.showMessageDialog(null, "No existen alimentos registrados en esta categoria", "Categoria vacia", JOptionPane.INFORMATION_MESSAGE);
                            }
                        }
                    } else {
                        //Mostrar todos los platillos que coincidan con el nombre del platillo
                        if (controller.runQuery("SELECT ID_Platillo, Platillo, Descripcion, Precio, Imagen FROM platillos WHERE Platillo LIKE '%" + mealFilter.getText() + "%'")) {
                            if (controller.getRS().next()) {
                                insertMenu();
                            } else {
                                JOptionPane.showMessageDialog(null, "No hubo coincidencia con el platillo: " + mealFilter.getText(), "Platillo no encontrado", JOptionPane.INFORMATION_MESSAGE);
                            }
                        }
                    }
                    break;
                case "Desayuno":
                    search();
                    break;
                case "Comida":
                    search();
                    break;
                case "Cena":
                    search();
                    break;
                case "Bebidas":
                    search();
                    break;
            }
            controller.closeRS();
        } catch (SQLException e) {
            Logger.getLogger(BD_Connection.class.getName()).log(Level.SEVERE, null, e);
            JOptionPane.showMessageDialog(null, "ERROR: no se pudo ejecutar la consulta.", "Error de Conexion", JOptionPane.ERROR_MESSAGE);
        } finally {
            controller.closeStmt();
            controller.disconnect();
        }


    }//GEN-LAST:event_search_btnActionPerformed

    private void mdfy_chefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mdfy_chefActionPerformed
        // TODO add your handling code here:
        desk.add(updte_chef);
        updte_chef.show();
    }//GEN-LAST:event_mdfy_chefActionPerformed

    private void mdfy_catActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mdfy_catActionPerformed
        // TODO add your handling code here:
        desk.add(updte_cat);
        updte_cat.show();
    }//GEN-LAST:event_mdfy_catActionPerformed

    private void mdfy_waiterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mdfy_waiterActionPerformed
        // TODO add your handling code here:
        desk.add(updte_wat);
        updte_wat.show();
    }//GEN-LAST:event_mdfy_waiterActionPerformed

    //Carga las categorias en el combo box
    public void loadToCB() {
        try {
            controller.setConnection();
            controller.createStmt();
            if (controller.runQuery("SELECT categoria FROM categorias")) {
                if (controller.getRS().next()) {
                    do {
                        filterCB.addItem(controller.getString(1));
                    } while (controller.getRS().next());
                } else {
                    JOptionPane.showMessageDialog(null, "No hay categorias disponibles", "No hay categorias", JOptionPane.INFORMATION_MESSAGE);
                }
                controller.closeRS();
            }

        } catch (SQLException e) {
            Logger.getLogger(BD_Connection.class.getName()).log(Level.SEVERE, null, e);
            JOptionPane.showMessageDialog(null, "Sucedio un error al recuperar las categorias disponibles", "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            controller.closeStmt();
            controller.disconnect();
        }
    }

    private Icon setIcon(String url) {
        ImageIcon icon = new ImageIcon(getClass().getResource(url));

        int width = search_btn.getWidth() - 10,
                height = search_btn.getHeight() - 10;

        ImageIcon icono = new ImageIcon(icon.getImage().getScaledInstance(width, height, Image.SCALE_DEFAULT));

        return icono;

    }

    private void insertMenu() {
        Image image;

        try {
            do {
                data[0] = controller.getInt(1);
                data[1] = controller.getString(2);
                data[2] = controller.getString(3);
                data[3] = controller.getFloat(4);

                // Obtenemos la imagen
                try {
                    File f = new File(controller.getString(5)); // creamos un objeto file con la ruta hacia la imagen. Hay un metodo que te da
                                                                // el path completo a partir de un path relativo
                    String imageLocation = f.getAbsolutePath()
                            .replaceFirst(controller.getString(5), "") + "src" + File.separator +
                            "imagenes" + File.separator + f.getName();
                    System.out.println(imageLocation);
                    BufferedImage bi = ImageIO.read(new File(imageLocation));
                    image = bi.getScaledInstance(90, 60, Image.SCALE_DEFAULT); // Escalamos el tamaño de la imagen
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "Error al procesar la imagen " + controller.getString(5),
                            "Error de procesamiento", JOptionPane.ERROR_MESSAGE);
                    break;
                }

                data[4] = new JLabel(new ImageIcon(image));
                dtm.addRow(data); // agregamos la imagen al modelo de la tabla, es decir, agregamos la fila
            } while (controller.getRS().next());
        } catch (SQLException e) {
            Logger.getLogger(BD_Connection.class.getName()).log(Level.SEVERE, null, e);
            JOptionPane.showMessageDialog(null, "ERROR: no se pudo ejecutar la consulta.", "Error de Conexion", JOptionPane.ERROR_MESSAGE);
        } finally {
            controller.closeRS();
            controller.closeStmt();
            controller.disconnect();
        }

    }

    private void search() {
        try {
            if (mealFilter.getText().equals("")) {
                //Mostrar todos los platillos de esa categoria
                if (controller.runQuery("SELECT platillos.ID_Platillo, platillos.Platillo, platillos.Descripcion, platillos.Precio, platillos.Imagen FROM platillos INNER JOIN categorias ON platillos.R_Categoria = categorias.ID_Categoria WHERE categorias.Categoria = '" + filterCB.getSelectedItem().toString() + "'")) {
                    if (controller.getRS().next()) {
                        insertMenu();
                    } else {
                        JOptionPane.showMessageDialog(null, "No existen alimentos registrados en esta categoria", "Categoria vacia", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            } else {
                //Mostrar todos los platillos de esa categoria que coincidan con el nombre del platillo
                if (controller.runQuery("SELECT ID_Platillo, Platillo, Descripcion, Precio, Imagen FROM platillos INNER JOIN categorias ON platillos.R_categoria = categorias.ID_Categoria WHERE platillos.Platillo LIKE '%" + mealFilter.getText() + "%' AND categorias.Categoria = '" + filterCB.getSelectedItem().toString() + "'")) {
                    if (controller.getRS().next()) {
                        insertMenu();
                    } else {
                        JOptionPane.showMessageDialog(null, "No hubo coincidencia con el platillo: " + mealFilter.getText(), "Platillo no encontrado", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            }
        } catch (SQLException e) {
            Logger.getLogger(BD_Connection.class.getName()).log(Level.SEVERE, null, e);
            JOptionPane.showMessageDialog(null, "ERROR: no se pudo ejecutar la consulta.", "Error de Conexion", JOptionPane.ERROR_MESSAGE);
        }
    }

    private Icon setPressIcon() {

        ImageIcon icon = new ImageIcon(getClass().getResource("/imagenes/busqueda.jpeg"));

        int width = search_btn.getWidth() - 15,
                height = search_btn.getHeight() - 15;

        ImageIcon icono = new ImageIcon(icon.getImage().getScaledInstance(width, height, Image.SCALE_DEFAULT));

        return icono;

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Entrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Entrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Entrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Entrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Entrada().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem about_it_mi;
    private javax.swing.JTextField changeCheck;
    private javax.swing.JButton clean_btn;
    private javax.swing.JButton clean_btn2;
    private javax.swing.JTextField customCheck;
    private javax.swing.JTextField customerTxt;
    private javax.swing.JDesktopPane desk;
    private javax.swing.JMenuItem exit_btn;
    private javax.swing.JComboBox<String> filterCB;
    private javax.swing.JMenuItem insrt_bill_btn;
    private javax.swing.JMenuItem insrt_chef_btn;
    private javax.swing.JMenuItem insrt_custom_btn;
    private javax.swing.JMenuItem insrt_invdet_btn;
    private javax.swing.JMenuItem insrt_meal;
    private javax.swing.JMenuItem insrt_tab_btn;
    private javax.swing.JMenuItem insrt_wait_btn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JPopupMenu.Separator jSeparator8;
    private javax.swing.JMenuItem mdfy_cat;
    private javax.swing.JMenuItem mdfy_chef;
    private javax.swing.JMenu mdfy_turn;
    private javax.swing.JMenuItem mdfy_waiter;
    private javax.swing.JTextField mealFilter;
    private javax.swing.JTextField mealTxt;
    private javax.swing.JTable menuTable;
    private javax.swing.JButton menu_btn;
    private javax.swing.JMenu modify_menu;
    private javax.swing.JButton order_btn;
    private javax.swing.JTextField payCheck;
    private javax.swing.JButton pay_btn;
    private javax.swing.JButton print_btn;
    private javax.swing.JMenuItem qry_bill_op;
    private javax.swing.JMenuItem qry_chef_op;
    private javax.swing.JMenuItem qry_custom_op;
    private javax.swing.JMenuItem qry_invoice_op;
    private javax.swing.JMenuItem qry_table_op;
    private javax.swing.JMenuItem qry_waiter_op;
    private javax.swing.JTextField quantityTxt;
    private javax.swing.JButton search_btn;
    private javax.swing.JTextField tableCheck;
    private javax.swing.JTextField tableTxt;
    private javax.swing.JLabel total;
    private javax.swing.JTextField totalCheck;
    private javax.swing.JTextField waiterTxt;
    // End of variables declaration//GEN-END:variables
}
